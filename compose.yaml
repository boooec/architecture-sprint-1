services:

  mongo:
    image: mongo
    restart: always
    logging:
      driver: none
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend-test:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    command: npm run lint
    restart: 'no'
    depends_on:
      mongo:
        condition: service_healthy

  backend:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 3001:3000
    healthcheck:
      interval: 10s
      timeout: 2s
      start_period: 15s
      retries: 5
      test: node healthcheck.js

  frontend-auth-test:
    build:
      context: frontend/microfrontend/auth
      dockerfile: ../../../Dockerfile.frontend
    command: yarn test:microfrontend
    restart: 'no'
    environment:
          CI: true

  frontend-auth:
    build:
      context: frontend/microfrontend/auth
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3000:3000
    depends_on:
      backend:
        condition: service_healthy

  frontend-profile-test:
    build:
      context: frontend/microfrontend/profile
      dockerfile: ../../../Dockerfile.frontend
    command: yarn test:microfrontend
    restart: 'no'
    environment:
          CI: true

  frontend-profile:
    build:
      context: frontend/microfrontend/profile
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3002:3000
    depends_on:
      backend:
        condition: service_healthy

  frontend-photos-test:
    build:
      context: frontend/microfrontend/photos
      dockerfile: ../../../Dockerfile.frontend
    command: yarn test:microfrontend
    restart: 'no'
    environment:
          CI: true

  frontend-photos:
    build:
      context: frontend/microfrontend/photos
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3003:3000
    depends_on:
      backend:
        condition: service_healthy
